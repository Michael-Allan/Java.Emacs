Using Java Mode Tamed


    ━━━━━━━━━━━━━━
     Installation
    ──────────────
        1+ Put a copy of `java-mode-tamed.el` on your load path.
            : re `java-mode-tamed.el` see ./java-mode-tamed.el
            : re `load path` see
              https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Search.html
        2+ Add the following to your initialization file.

              (autoload 'java-mode-tamed "java-mode-tamed" nil t)
              (set 'auto-mode-alist (cons (cons "\\.java\\'" 'java-mode-tamed) auto-mode-alist))
              (set 'interpreter-mode-alist
                   (cons (cons "\\(?:--split-string=\\|-S\\)?java" 'java-mode-tamed)
                         interpreter-mode-alist))

            : re `(--split-string)=.+(-S)` see
              `^^source-launch files encoded with a shebang$` @ `^^ Note$`
            : re `initialization file` see
              https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html
            - The `interpreter-mode-alist` entry is for source-launch files encoded with a shebang.
                : re `source-launch files encoded with a shebang` see @ `^^ Note$`
        working example
            : see http://reluk.ca/.emacs.d/lisp/initialization.el



    ━━━━━━━━━━━━━━━
     Customization
    ───────────────
        - For a list of faces that may be customized, use `M-x customize-group <RET>
          java-mode-tamed <RET>`.
        - Or search through the `defface` definitions of `java-mode-tamed.el`.
            : re `java-mode-tamed.el` see ./java-mode-tamed.el
        working example
            : see http://reluk.ca/.Xresources
            : see http://reluk.ca/project/Java/Emacs/screen_shot_after_customization.png



    ━━━━━━
     Note
    ──────
        source-launch files encoded with a shebang
            : see https://docs.oracle.com/en/java/javase/14/docs/specs/man/java.html#using-source-file-mode-to-launch-single-file-source-code-programs
            : see http://openjdk.java.net/jeps/330#Shebang_files

            - For a source-launch file that has no `.java` extension, if its shebang line uses `-S`
              instead of `--split-string`, then it would have to omit the space that typically follows.
              If it had the following shebang line, for instance, then auto-mode would fail:

                   #!/usr/bin/env -S ${JDK_HOME}/bin/java --source 14

            - With the above, an `interpreter-mode-alist` entry would have only `-S` to match against,
              which does not suffice to indicate a Java file.  To avoid this, the shebang line would
              have to appear as:

                   #!/usr/bin/env -S${JDK_HOME}/bin/java --source 14

            - Yet, while the above seems to work (GNU coreutils 8.3), omitting the space in this manner
              is undocumented.  Therefore it might be better to avoid `-S` in favour of the long form,
              `--split-string`, which conventionally uses ‘=’ as a separator instead of a space.
                : see https://www.gnu.org/software/coreutils/manual/html_node/env-invocation.html



                                   \ Copyright © 2019-2020, Michael Allan and contributors.  Licence MIT.
